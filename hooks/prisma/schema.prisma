// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  name     String?
  password String?

  zap Zap[]
}

model Zap {
  id      String   @id @default(uuid())
  trigger Trigger?

  user   User @relation(fields: [userId], references: [id])
  userId Int

  actions Action[]

  zapRuns ZapRun[]
}

model Trigger {
  id String @id @default(uuid())

  type               AvailableTrigger @relation(fields: [availableTriggerId], references: [id])
  availableTriggerId String

  zap   Zap    @relation(fields: [zapId], references: [id])
  zapId String @unique
}

model AvailableTrigger {
  id   String @id @default(uuid())
  name String

  triggers Trigger[]
}

model Action {
  id String @id @default(uuid())

  Zap   Zap    @relation(fields: [zapId], references: [id])
  zapId String

  type              AvailableAction @relation(fields: [availableActionId], references: [id])
  availableActionId String
}

model AvailableAction {
  id      String   @id @default(uuid())
  name    String
  actions Action[]
}

model ZapRun {
  id       String @id @default(uuid())
  metadata Json

  zapId String
  zap   Zap    @relation(fields: [zapId], references: [id])

  zapRunOutBox ZapRunOutBox?
}

model ZapRunOutBox {
  id String @id @default(uuid())

  zapRunId String @unique
  zapRun   ZapRun @relation(fields: [zapRunId], references: [id])
}
